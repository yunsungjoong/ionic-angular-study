{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","url","ionRouteDataChanged","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","parsePath","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","undefined","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","previousPath","busy","lastState","ionRouteWillChange","ionRouteDidChange","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","writeNavStateRoot","ev","detail","register","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","RouterLink","routerDirection","onClick","mode","attrs","rel","target","color"],"mappings":"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","file":"55-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, e as getElement, c as getIonMode, h, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { e as debounce } from './helpers-46f4a262.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\r\n    const path = segments\r\n        .filter(s => s.length > 0)\r\n        .join('/');\r\n    return '/' + path;\r\n};\r\nconst chainToPath = (chain) => {\r\n    const path = [];\r\n    for (const route of chain) {\r\n        for (const segment of route.path) {\r\n            if (segment[0] === ':') {\r\n                const param = route.params && route.params[segment.slice(1)];\r\n                if (!param) {\r\n                    return null;\r\n                }\r\n                path.push(param);\r\n            }\r\n            else if (segment !== '') {\r\n                path.push(segment);\r\n            }\r\n        }\r\n    }\r\n    return path;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state) => {\r\n    let url = generatePath([\r\n        ...parsePath(root),\r\n        ...path\r\n    ]);\r\n    if (useHash) {\r\n        url = '#' + url;\r\n    }\r\n    if (direction === ROUTER_INTENT_FORWARD) {\r\n        history.pushState(state, '', url);\r\n    }\r\n    else {\r\n        history.replaceState(state, '', url);\r\n    }\r\n};\r\nconst removePrefix = (prefix, path) => {\r\n    if (prefix.length > path.length) {\r\n        return null;\r\n    }\r\n    if (prefix.length <= 1 && prefix[0] === '') {\r\n        return path;\r\n    }\r\n    for (let i = 0; i < prefix.length; i++) {\r\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\r\n            return null;\r\n        }\r\n    }\r\n    if (path.length === prefix.length) {\r\n        return [''];\r\n    }\r\n    return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n    let pathname = loc.pathname;\r\n    if (useHash) {\r\n        const hash = loc.hash;\r\n        pathname = (hash[0] === '#')\r\n            ? hash.slice(1)\r\n            : '';\r\n    }\r\n    const prefix = parsePath(root);\r\n    const path = parsePath(pathname);\r\n    return removePrefix(prefix, path);\r\n};\r\nconst parsePath = (path) => {\r\n    if (path == null) {\r\n        return [''];\r\n    }\r\n    const segments = path.split('/')\r\n        .map(s => s.trim())\r\n        .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n        return [''];\r\n    }\r\n    else {\r\n        return segments;\r\n    }\r\n};\n\nconst printRoutes = (routes) => {\r\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n    for (const chain of routes) {\r\n        const path = [];\r\n        chain.forEach(r => path.push(...r.path));\r\n        const ids = chain.map(r => r.id);\r\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n    }\r\n    console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n    for (const redirect of redirects) {\r\n        if (redirect.to) {\r\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\r\n        }\r\n    }\r\n    console.groupEnd();\r\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false) => {\r\n    try {\r\n        // find next navigation outlet in the DOM\r\n        const outlet = searchNavNode(root);\r\n        // make sure we can continue interacting the DOM, otherwise abort\r\n        if (index >= chain.length || !outlet) {\r\n            return changed;\r\n        }\r\n        await outlet.componentOnReady();\r\n        const route = chain[index];\r\n        const result = await outlet.setRouteId(route.id, route.params, direction);\r\n        // if the outlet changed the page, reset navigation to neutral (no direction)\r\n        // this means nested outlets will not animate\r\n        if (result.changed) {\r\n            direction = ROUTER_INTENT_NONE;\r\n            changed = true;\r\n        }\r\n        // recursively set nested outlets\r\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed);\r\n        // once all nested outlets are visible let's make the parent visible too,\r\n        // using markVisible prevents flickering\r\n        if (result.markVisible) {\r\n            await result.markVisible();\r\n        }\r\n        return changed;\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nconst readNavState = async (root) => {\r\n    const ids = [];\r\n    let outlet;\r\n    let node = root;\r\n    // tslint:disable-next-line:no-constant-condition\r\n    while (true) {\r\n        outlet = searchNavNode(node);\r\n        if (outlet) {\r\n            const id = await outlet.getRouteId();\r\n            if (id) {\r\n                node = id.element;\r\n                id.element = undefined;\r\n                ids.push(id);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n    if (searchNavNode(document.body)) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise(resolve => {\r\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n    });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n    if (root.matches(QUERY)) {\r\n        return root;\r\n    }\r\n    const outlet = root.querySelector(QUERY);\r\n    return outlet ? outlet : undefined;\r\n};\n\nconst matchesRedirect = (input, route) => {\r\n    const { from, to } = route;\r\n    if (to === undefined) {\r\n        return false;\r\n    }\r\n    if (from.length > input.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < from.length; i++) {\r\n        const expected = from[i];\r\n        if (expected === '*') {\r\n            return true;\r\n        }\r\n        if (expected !== input[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return from.length === input.length;\r\n};\r\nconst routeRedirect = (path, routes) => {\r\n    return routes.find(route => matchesRedirect(path, route));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n    const len = Math.min(ids.length, chain.length);\r\n    let i = 0;\r\n    for (; i < len; i++) {\r\n        if (ids[i].toLowerCase() !== chain[i].id) {\r\n            break;\r\n        }\r\n    }\r\n    return i;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n    const segments = new RouterSegments(inputPath);\r\n    let matchesDefault = false;\r\n    let allparams;\r\n    for (let i = 0; i < chain.length; i++) {\r\n        const path = chain[i].path;\r\n        if (path[0] === '') {\r\n            matchesDefault = true;\r\n        }\r\n        else {\r\n            for (const segment of path) {\r\n                const data = segments.next();\r\n                // data param\r\n                if (segment[0] === ':') {\r\n                    if (data === '') {\r\n                        return null;\r\n                    }\r\n                    allparams = allparams || [];\r\n                    const params = allparams[i] || (allparams[i] = {});\r\n                    params[segment.slice(1)] = data;\r\n                }\r\n                else if (data !== segment) {\r\n                    return null;\r\n                }\r\n            }\r\n            matchesDefault = false;\r\n        }\r\n    }\r\n    const matches = (matchesDefault)\r\n        ? matchesDefault === (segments.next() === '')\r\n        : true;\r\n    if (!matches) {\r\n        return null;\r\n    }\r\n    if (allparams) {\r\n        return chain.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, allparams[i])\r\n        }));\r\n    }\r\n    return chain;\r\n};\r\nconst mergeParams = (a, b) => {\r\n    if (!a && b) {\r\n        return b;\r\n    }\r\n    else if (a && !b) {\r\n        return a;\r\n    }\r\n    else if (a && b) {\r\n        return Object.assign(Object.assign({}, a), b);\r\n    }\r\n    return undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n    let match = null;\r\n    let maxMatches = 0;\r\n    const plainIDs = ids.map(i => i.id);\r\n    for (const chain of chains) {\r\n        const score = matchesIDs(plainIDs, chain);\r\n        if (score > maxMatches) {\r\n            match = chain;\r\n            maxMatches = score;\r\n        }\r\n    }\r\n    if (match) {\r\n        return match.map((route, i) => ({\r\n            id: route.id,\r\n            path: route.path,\r\n            params: mergeParams(route.params, ids[i] && ids[i].params)\r\n        }));\r\n    }\r\n    return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n    let match = null;\r\n    let matches = 0;\r\n    for (const chain of chains) {\r\n        const matchedChain = matchesPath(path, chain);\r\n        if (matchedChain !== null) {\r\n            const score = computePriority(matchedChain);\r\n            if (score > matches) {\r\n                matches = score;\r\n                match = matchedChain;\r\n            }\r\n        }\r\n    }\r\n    return match;\r\n};\r\nconst computePriority = (chain) => {\r\n    let score = 1;\r\n    let level = 1;\r\n    for (const route of chain) {\r\n        for (const path of route.path) {\r\n            if (path[0] === ':') {\r\n                score += Math.pow(1, level);\r\n            }\r\n            else if (path !== '') {\r\n                score += Math.pow(2, level);\r\n            }\r\n            level++;\r\n        }\r\n    }\r\n    return score;\r\n};\r\nclass RouterSegments {\r\n    constructor(path) {\r\n        this.path = path.slice();\r\n    }\r\n    next() {\r\n        if (this.path.length > 0) {\r\n            return this.path.shift();\r\n        }\r\n        return '';\r\n    }\r\n}\n\nconst readRedirects = (root) => {\r\n    return Array.from(root.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n        .map(el => {\r\n        const to = readProp(el, 'to');\r\n        return {\r\n            from: parsePath(readProp(el, 'from')),\r\n            to: to == null ? undefined : parsePath(to),\r\n        };\r\n    });\r\n};\r\nconst readRoutes = (root) => {\r\n    return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (root, node = root) => {\r\n    return Array.from(node.children)\r\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n        .map(el => {\r\n        const component = readProp(el, 'component');\r\n        if (component == null) {\r\n            throw new Error('component missing in ion-route');\r\n        }\r\n        return {\r\n            path: parsePath(readProp(el, 'url')),\r\n            id: component.toLowerCase(),\r\n            params: el.componentProps,\r\n            children: readRouteNodes(root, el)\r\n        };\r\n    });\r\n};\r\nconst readProp = (el, prop) => {\r\n    if (prop in el) {\r\n        return el[prop];\r\n    }\r\n    if (el.hasAttribute(prop)) {\r\n        return el.getAttribute(prop);\r\n    }\r\n    return null;\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n    const routes = [];\r\n    for (const node of nodes) {\r\n        flattenNode([], routes, node);\r\n    }\r\n    return routes;\r\n};\r\nconst flattenNode = (chain, routes, node) => {\r\n    const s = chain.slice();\r\n    s.push({\r\n        id: node.id,\r\n        path: node.path,\r\n        params: node.params\r\n    });\r\n    if (node.children.length === 0) {\r\n        routes.push(s);\r\n        return;\r\n    }\r\n    for (const sub of node.children) {\r\n        flattenNode(s, routes, sub);\r\n    }\r\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    onPopState() {\n        const direction = this.historyDirection();\n        const path = this.getPath();\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, () => this.back());\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    push(url, direction = 'forward') {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        const path = parsePath(url);\n        this.setPath(path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}