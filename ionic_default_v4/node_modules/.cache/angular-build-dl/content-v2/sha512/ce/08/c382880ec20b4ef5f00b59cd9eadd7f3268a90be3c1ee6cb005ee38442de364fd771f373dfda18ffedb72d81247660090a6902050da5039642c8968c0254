{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-checkbox-ios.entry.js"],"names":["Checkbox","hostRef","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionStyle","emitStyle","isChecked","buttonEl","focus","color","el","labelId","mode","label","id","path","d","role","Object","assign","viewBox","type","ref","btnEl"],"mappings":"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","file":"17-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.23);--background:var(--ion-item-background,var(--ion-background-color,#fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:16px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:16px;margin-inline-end:16px}}\"; }\n};\nlet checkboxIds = 0;\n\nexport { Checkbox as ion_checkbox };\n"]}