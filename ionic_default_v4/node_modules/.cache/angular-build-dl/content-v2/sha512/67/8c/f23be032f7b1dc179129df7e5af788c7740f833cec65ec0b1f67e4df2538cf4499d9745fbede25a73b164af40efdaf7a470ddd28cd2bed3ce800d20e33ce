{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/index-69c37885.js"],"names":["transitionEnd","el","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","CSS_VALUE_REGEX","DURATION_MIN","TRANSITION_END_FALLBACK_PADDING_MS","TRANSFORM_PROPS","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","_hasDur","_hasTweenEffect","_isAsync","_isReverse","_destroyed","hasChildren","isPlaying","hasCompleted","length","i","_addEl","nodeType","_elements","push","childAnimation","parent","_childAnimations","duration","undefined","_duration","getDuration","milliseconds","_reversedEasingName","_easingName","getEasing","name","prop","val","_addProp","clearProperyAfterTransition","fx","afterClearStyles","trans","fromVal","toVal","from","to","_fxProperties","find","effectName","state","fxProp","_getProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","r","match","parseFloat","isNaN","className","_beforeAddClasses","_beforeRemoveClasses","styles","_beforeStyles","propertyNames","domReadFn","_readCallbacks","domWriteFn","_writeCallbacks","_afterAddClasses","_afterRemoveClasses","_afterStyles","_hasDuration","_clearAsync","_playInit","_playDomInspect","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","play","children","child","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","_setTrans","_setAfterStyles","_didFinish","stepValue","shouldComplete","self","_playEnd","_didFinishAll","onTransitionFallback","_timerId","_unregisterTrnsEnd","_transEl","setTimeout","_hasDomReads","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","valNum","unit","style","setProperty","forcedLinearEasing","easing","durString","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","addClasses","removeClasses","elementClassList","classList","c","add","remove","Object","entries","key","value","readFunctions","writeFunctions","beforeAddClasses","beforeRemoveClasses","beforeStyles","keys","propName","removeProperty","afterAddClasses","afterRemoveClasses","afterStyles","addWillChange","willChange","effect","propWC","join","_progressStart","Math","min","max","progressStep","currentStepValue","diff","abs","_progressEnd","isAsync","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","shouldReverse","reverse","destroy","targetEl","create","animationBuilder","baseEl"],"mappings":"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","file":"index-69c37885-js-es5.js","sourcesContent":["const transitionEnd = (el, callback) => {\r\n    let unRegTrans;\r\n    const opts = { passive: true };\r\n    const unregister = () => {\r\n        if (unRegTrans) {\r\n            unRegTrans();\r\n        }\r\n    };\r\n    const onTransitionEnd = (ev) => {\r\n        if (el === ev.target) {\r\n            unregister();\r\n            callback(ev);\r\n        }\r\n    };\r\n    if (el) {\r\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n        el.addEventListener('transitionend', onTransitionEnd, opts);\r\n        unRegTrans = () => {\r\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\r\n        };\r\n    }\r\n    return unregister;\r\n};\n\nconst CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\r\nconst DURATION_MIN = 32;\r\nconst TRANSITION_END_FALLBACK_PADDING_MS = 400;\r\nconst TRANSFORM_PROPS = {\r\n    'translateX': 1,\r\n    'translateY': 1,\r\n    'translateZ': 1,\r\n    'scale': 1,\r\n    'scaleX': 1,\r\n    'scaleY': 1,\r\n    'scaleZ': 1,\r\n    'rotate': 1,\r\n    'rotateX': 1,\r\n    'rotateY': 1,\r\n    'rotateZ': 1,\r\n    'skewX': 1,\r\n    'skewY': 1,\r\n    'perspective': 1\r\n};\r\nconst win = typeof window !== 'undefined' ? window : {};\r\nconst raf = win.requestAnimationFrame\r\n    ? win.requestAnimationFrame.bind(win)\r\n    : (f) => f(Date.now());\r\nclass Animator {\r\n    constructor() {\r\n        this._hasDur = false;\r\n        this._hasTweenEffect = false;\r\n        this._isAsync = false;\r\n        this._isReverse = false;\r\n        this._destroyed = false;\r\n        this.hasChildren = false;\r\n        this.isPlaying = false;\r\n        this.hasCompleted = false;\r\n    }\r\n    addElement(el) {\r\n        if (el != null) {\r\n            if (el.length > 0) {\r\n                for (let i = 0; i < el.length; i++) {\r\n                    this._addEl(el[i]);\r\n                }\r\n            }\r\n            else {\r\n                this._addEl(el);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * NO DOM\r\n     */\r\n    _addEl(el) {\r\n        if (el.nodeType === 1) {\r\n            (this._elements = this._elements || []).push(el);\r\n        }\r\n    }\r\n    /**\r\n     * Add a child animation to this animation.\r\n     */\r\n    add(childAnimation) {\r\n        childAnimation.parent = this;\r\n        this.hasChildren = true;\r\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the duration of this animation. If this animation does\r\n     * not have a duration, then it'll get the duration from its parent.\r\n     */\r\n    getDuration(opts) {\r\n        if (opts && opts.duration !== undefined) {\r\n            return opts.duration;\r\n        }\r\n        else if (this._duration !== undefined) {\r\n            return this._duration;\r\n        }\r\n        else if (this.parent) {\r\n            return this.parent.getDuration();\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns if the animation is a root one.\r\n     */\r\n    isRoot() {\r\n        return !this.parent;\r\n    }\r\n    /**\r\n     * Set the duration for this animation.\r\n     */\r\n    duration(milliseconds) {\r\n        this._duration = milliseconds;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the easing of this animation. If this animation does\r\n     * not have an easing, then it'll get the easing from its parent.\r\n     */\r\n    getEasing() {\r\n        if (this._isReverse && this._reversedEasingName !== undefined) {\r\n            return this._reversedEasingName;\r\n        }\r\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\r\n    }\r\n    /**\r\n     * Set the easing for this animation.\r\n     */\r\n    easing(name) {\r\n        this._easingName = name;\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the easing for this reversed animation.\r\n     */\r\n    easingReverse(name) {\r\n        this._reversedEasingName = name;\r\n        return this;\r\n    }\r\n    /**\r\n     * Add the \"from\" value for a specific property.\r\n     */\r\n    from(prop, val) {\r\n        this._addProp('from', prop, val);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add the \"to\" value for a specific property.\r\n     */\r\n    to(prop, val, clearProperyAfterTransition = false) {\r\n        const fx = this._addProp('to', prop, val);\r\n        if (clearProperyAfterTransition) {\r\n            // if this effect is a transform then clear the transform effect\r\n            // otherwise just clear the actual property\r\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\r\n     */\r\n    fromTo(prop, fromVal, toVal, clearProperyAfterTransition) {\r\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\r\n    }\r\n    /**\r\n     * NO DOM\r\n     */\r\n    _getProp(name) {\r\n        if (this._fxProperties) {\r\n            return this._fxProperties.find(prop => prop.effectName === name);\r\n        }\r\n        return undefined;\r\n    }\r\n    _addProp(state, prop, val) {\r\n        let fxProp = this._getProp(prop);\r\n        if (!fxProp) {\r\n            // first time we've see this EffectProperty\r\n            const shouldTrans = (TRANSFORM_PROPS[prop] === 1);\r\n            fxProp = {\r\n                effectName: prop,\r\n                trans: shouldTrans,\r\n                // add the will-change property for transforms or opacity\r\n                wc: (shouldTrans ? 'transform' : prop)\r\n            };\r\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\r\n        }\r\n        // add from/to EffectState to the EffectProperty\r\n        const fxState = {\r\n            val,\r\n            num: 0,\r\n            effectUnit: '',\r\n        };\r\n        fxProp[state] = fxState;\r\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\r\n            const r = val.match(CSS_VALUE_REGEX);\r\n            if (r) {\r\n                const num = parseFloat(r[1]);\r\n                if (!isNaN(num)) {\r\n                    fxState.num = num;\r\n                }\r\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\r\n            }\r\n        }\r\n        else if (typeof val === 'number') {\r\n            fxState.num = val;\r\n        }\r\n        return fxProp;\r\n    }\r\n    /**\r\n     * Add CSS class to this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    beforeAddClass(className) {\r\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove CSS class from this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    beforeRemoveClass(className) {\r\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set CSS inline styles to this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    beforeStyles(styles) {\r\n        this._beforeStyles = styles;\r\n        return this;\r\n    }\r\n    /**\r\n     * Clear CSS inline styles from this animation's elements\r\n     * before the animation begins.\r\n     */\r\n    beforeClearStyles(propertyNames) {\r\n        this._beforeStyles = this._beforeStyles || {};\r\n        for (const prop of propertyNames) {\r\n            this._beforeStyles[prop] = '';\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a function which contains DOM reads, which will run\r\n     * before the animation begins.\r\n     */\r\n    beforeAddRead(domReadFn) {\r\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a function which contains DOM writes, which will run\r\n     * before the animation begins.\r\n     */\r\n    beforeAddWrite(domWriteFn) {\r\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add CSS class to this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    afterAddClass(className) {\r\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove CSS class from this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    afterRemoveClass(className) {\r\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set CSS inline styles to this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    afterStyles(styles) {\r\n        this._afterStyles = styles;\r\n        return this;\r\n    }\r\n    /**\r\n     * Clear CSS inline styles from this animation's elements\r\n     * after the animation finishes.\r\n     */\r\n    afterClearStyles(propertyNames) {\r\n        this._afterStyles = this._afterStyles || {};\r\n        for (const prop of propertyNames) {\r\n            this._afterStyles[prop] = '';\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Play the animation.\r\n     */\r\n    play(opts) {\r\n        // If the animation was already invalidated (it did finish), do nothing\r\n        if (this._destroyed) {\r\n            return;\r\n        }\r\n        // this is the top level animation and is in full control\r\n        // of when the async play() should actually kick off\r\n        // if there is no duration then it'll set the TO property immediately\r\n        // if there is a duration, then it'll stage all animations at the\r\n        // FROM property and transition duration, wait a few frames, then\r\n        // kick off the animation by setting the TO property for each animation\r\n        this._isAsync = this._hasDuration(opts);\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        // recursively kicks off the correct progress step for each child animation\r\n        // ******** DOM WRITE ****************\r\n        this._playInit(opts);\r\n        // doubling up RAFs since this animation was probably triggered\r\n        // from an input event, and just having one RAF would have this code\r\n        // run within the same frame as the triggering input event, and the\r\n        // input event probably already did way too much work for one frame\r\n        raf(() => {\r\n            raf(() => {\r\n                this._playDomInspect(opts);\r\n            });\r\n        });\r\n    }\r\n    playAsync(opts) {\r\n        return new Promise(resolve => {\r\n            this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\r\n            this.play(opts);\r\n            return this;\r\n        });\r\n    }\r\n    playSync() {\r\n        // If the animation was already invalidated (it did finish), do nothing\r\n        if (!this._destroyed) {\r\n            const opts = { duration: 0 };\r\n            this._isAsync = false;\r\n            this._clearAsync();\r\n            this._playInit(opts);\r\n            this._playDomInspect(opts);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _playInit(opts) {\r\n        // always default that an animation does not tween\r\n        // a tween requires that an Animation class has an element\r\n        // and that it has at least one FROM/TO effect\r\n        // and that the FROM/TO effect can tween numeric values\r\n        this._hasTweenEffect = false;\r\n        this.isPlaying = true;\r\n        this.hasCompleted = false;\r\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._playInit(opts);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            // if there is a duration then we want to start at step 0\r\n            // ******** DOM WRITE ****************\r\n            this._progress(0);\r\n            // add the will-change properties\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(true);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     * ROOT ANIMATION\r\n     */\r\n    _playDomInspect(opts) {\r\n        // fire off all the \"before\" function that have DOM READS in them\r\n        // elements will be in the DOM, however visibily hidden\r\n        // so we can read their dimensions if need be\r\n        // ******** DOM READ ****************\r\n        // ******** DOM WRITE ****************\r\n        this._beforeAnimation();\r\n        // for the root animation only\r\n        // set the async TRANSITION END event\r\n        // and run onFinishes when the transition ends\r\n        const dur = this.getDuration(opts);\r\n        if (this._isAsync) {\r\n            this._asyncEnd(dur, true);\r\n        }\r\n        // ******** DOM WRITE ****************\r\n        this._playProgress(opts);\r\n        if (this._isAsync && !this._destroyed) {\r\n            // this animation has a duration so we need another RAF\r\n            // for the CSS TRANSITION properties to kick in\r\n            raf(() => {\r\n                this._playToStep(1);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _playProgress(opts) {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._playProgress(opts);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            // set the CSS TRANSITION duration/easing\r\n            // ******** DOM WRITE ****************\r\n            this._setTrans(this.getDuration(opts), false);\r\n        }\r\n        else {\r\n            // this animation does not have a duration, so it should not animate\r\n            // just go straight to the TO properties and call it done\r\n            // ******** DOM WRITE ****************\r\n            this._progress(1);\r\n            // since there was no animation, immediately run the after\r\n            // ******** DOM WRITE ****************\r\n            this._setAfterStyles();\r\n            // this animation has no duration, so it has finished\r\n            // other animations could still be running\r\n            this._didFinish(true);\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _playToStep(stepValue) {\r\n        if (!this._destroyed) {\r\n            const children = this._childAnimations;\r\n            if (children) {\r\n                for (const child of children) {\r\n                    // ******** DOM WRITE ****************\r\n                    child._playToStep(stepValue);\r\n                }\r\n            }\r\n            if (this._hasDur) {\r\n                // browser had some time to render everything in place\r\n                // and the transition duration/easing is set\r\n                // now set the TO properties which will trigger the transition to begin\r\n                // ******** DOM WRITE ****************\r\n                this._progress(stepValue);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     * ROOT ANIMATION\r\n     */\r\n    _asyncEnd(dur, shouldComplete) {\r\n        const self = this;\r\n        const onTransitionEnd = () => {\r\n            // congrats! a successful transition completed!\r\n            // ensure transition end events and timeouts have been cleared\r\n            self._clearAsync();\r\n            // ******** DOM WRITE ****************\r\n            self._playEnd();\r\n            // transition finished\r\n            self._didFinishAll(shouldComplete, true, false);\r\n        };\r\n        const onTransitionFallback = () => {\r\n            // oh noz! the transition end event didn't fire in time!\r\n            // instead the fallback timer when first\r\n            // if all goes well this fallback should never fire\r\n            // clear the other async end events from firing\r\n            self._timerId = undefined;\r\n            self._clearAsync();\r\n            // set the after styles\r\n            // ******** DOM WRITE ****************\r\n            self._playEnd(shouldComplete ? 1 : 0);\r\n            // transition finished\r\n            self._didFinishAll(shouldComplete, true, false);\r\n        };\r\n        // set the TRANSITION END event on one of the transition elements\r\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\r\n        // set a fallback timeout if the transition end event never fires, or is too slow\r\n        // transition end fallback: (animation duration + XXms)\r\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _playEnd(stepValue) {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._playEnd(stepValue);\r\n            }\r\n        }\r\n        if (this._hasDur) {\r\n            if (stepValue !== undefined) {\r\n                // too late to have a smooth animation, just finish it\r\n                // ******** DOM WRITE ****************\r\n                this._setTrans(0, true);\r\n                // ensure the ending progress step gets rendered\r\n                // ******** DOM WRITE ****************\r\n                this._progress(stepValue);\r\n            }\r\n            // set the after styles\r\n            // ******** DOM WRITE ****************\r\n            this._setAfterStyles();\r\n            // remove the will-change properties\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(false);\r\n        }\r\n    }\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    _hasDuration(opts) {\r\n        if (this.getDuration(opts) > DURATION_MIN) {\r\n            return true;\r\n        }\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                if (child._hasDuration(opts)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    _hasDomReads() {\r\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\r\n            return true;\r\n        }\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                if (child._hasDomReads()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Immediately stop at the end of the animation.\r\n     */\r\n    stop(stepValue = 1) {\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        this._hasDur = true;\r\n        this._playEnd(stepValue);\r\n    }\r\n    /**\r\n     * NO DOM\r\n     * NO RECURSION\r\n     */\r\n    _clearAsync() {\r\n        if (this._unregisterTrnsEnd) {\r\n            this._unregisterTrnsEnd();\r\n        }\r\n        if (this._timerId) {\r\n            clearTimeout(this._timerId);\r\n        }\r\n        this._timerId = this._unregisterTrnsEnd = undefined;\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    _progress(stepValue) {\r\n        // bread 'n butter\r\n        let val;\r\n        const elements = this._elements;\r\n        const effects = this._fxProperties;\r\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\r\n            return;\r\n        }\r\n        // flip the number if we're going in reverse\r\n        if (this._isReverse) {\r\n            stepValue = 1 - stepValue;\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        let finalTransform = '';\r\n        let fx;\r\n        for (i = 0; i < effects.length; i++) {\r\n            fx = effects[i];\r\n            if (fx.from && fx.to) {\r\n                const fromNum = fx.from.num;\r\n                const toNum = fx.to.num;\r\n                const tweenEffect = (fromNum !== toNum);\r\n                if (tweenEffect) {\r\n                    this._hasTweenEffect = true;\r\n                }\r\n                if (stepValue === 0) {\r\n                    // FROM\r\n                    val = fx.from.val;\r\n                }\r\n                else if (stepValue === 1) {\r\n                    // TO\r\n                    val = fx.to.val;\r\n                }\r\n                else if (tweenEffect) {\r\n                    // EVERYTHING IN BETWEEN\r\n                    const valNum = (((toNum - fromNum) * stepValue) + fromNum);\r\n                    const unit = fx.to.effectUnit;\r\n                    val = valNum + unit;\r\n                }\r\n                if (val !== null) {\r\n                    const prop = fx.effectName;\r\n                    if (fx.trans) {\r\n                        finalTransform += prop + '(' + val + ') ';\r\n                    }\r\n                    else {\r\n                        for (j = 0; j < elements.length; j++) {\r\n                            // ******** DOM WRITE ****************\r\n                            elements[j].style.setProperty(prop, val);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // place all transforms on the same property\r\n        if (finalTransform.length > 0) {\r\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\r\n                finalTransform += 'translateZ(0px)';\r\n            }\r\n            for (i = 0; i < elements.length; i++) {\r\n                // ******** DOM WRITE ****************\r\n                elements[i].style.setProperty('transform', finalTransform);\r\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    _setTrans(dur, forcedLinearEasing) {\r\n        // Transition is not enabled if there are not effects\r\n        const elements = this._elements;\r\n        if (!elements || elements.length === 0 || !this._fxProperties) {\r\n            return;\r\n        }\r\n        // set the TRANSITION properties inline on the element\r\n        const easing = (forcedLinearEasing ? 'linear' : this.getEasing());\r\n        const durString = dur + 'ms';\r\n        for (const { style } of elements) {\r\n            if (dur > 0) {\r\n                // ******** DOM WRITE ****************\r\n                style.transitionDuration = durString;\r\n                // each animation can have a different easing\r\n                if (easing !== null) {\r\n                    // ******** DOM WRITE ****************\r\n                    style.transitionTimingFunction = easing;\r\n                }\r\n            }\r\n            else {\r\n                style.transitionDuration = '0';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM READ\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _beforeAnimation() {\r\n        // fire off all the \"before\" function that have DOM READS in them\r\n        // elements will be in the DOM, however visibily hidden\r\n        // so we can read their dimensions if need be\r\n        // ******** DOM READ ****************\r\n        this._fireBeforeReadFunc();\r\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\r\n        // fire off all the \"before\" function that have DOM WRITES in them\r\n        // ******** DOM WRITE ****************\r\n        this._fireBeforeWriteFunc();\r\n        // stage all of the before css classes and inline styles\r\n        // ******** DOM WRITE ****************\r\n        this._setBeforeStyles();\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _setBeforeStyles() {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                child._setBeforeStyles();\r\n            }\r\n        }\r\n        const elements = this._elements;\r\n        // before the animations have started\r\n        // only set before styles if animation is not reversed\r\n        if (!elements || elements.length === 0 || this._isReverse) {\r\n            return;\r\n        }\r\n        const addClasses = this._beforeAddClasses;\r\n        const removeClasses = this._beforeRemoveClasses;\r\n        for (const el of elements) {\r\n            const elementClassList = el.classList;\r\n            // css classes to add before the animation\r\n            if (addClasses) {\r\n                for (const c of addClasses) {\r\n                    // ******** DOM WRITE ****************\r\n                    elementClassList.add(c);\r\n                }\r\n            }\r\n            // css classes to remove before the animation\r\n            if (removeClasses) {\r\n                for (const c of removeClasses) {\r\n                    // ******** DOM WRITE ****************\r\n                    elementClassList.remove(c);\r\n                }\r\n            }\r\n            // inline styles to add before the animation\r\n            if (this._beforeStyles) {\r\n                for (const [key, value] of Object.entries(this._beforeStyles)) {\r\n                    // ******** DOM WRITE ****************\r\n                    el.style.setProperty(key, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM READ\r\n     * RECURSION\r\n     */\r\n    _fireBeforeReadFunc() {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM READ ****************\r\n                child._fireBeforeReadFunc();\r\n            }\r\n        }\r\n        const readFunctions = this._readCallbacks;\r\n        if (readFunctions) {\r\n            for (const callback of readFunctions) {\r\n                // ******** DOM READ ****************\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _fireBeforeWriteFunc() {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._fireBeforeWriteFunc();\r\n            }\r\n        }\r\n        const writeFunctions = this._writeCallbacks;\r\n        if (writeFunctions) {\r\n            for (const callback of writeFunctions) {\r\n                // ******** DOM WRITE ****************\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     */\r\n    _setAfterStyles() {\r\n        const elements = this._elements;\r\n        if (!elements) {\r\n            return;\r\n        }\r\n        for (const el of elements) {\r\n            const elementClassList = el.classList;\r\n            // remove the transition duration/easing\r\n            // ******** DOM WRITE ****************\r\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\r\n            if (this._isReverse) {\r\n                // finished in reverse direction\r\n                // css classes that were added before the animation should be removed\r\n                const beforeAddClasses = this._beforeAddClasses;\r\n                if (beforeAddClasses) {\r\n                    for (const c of beforeAddClasses) {\r\n                        elementClassList.remove(c);\r\n                    }\r\n                }\r\n                // css classes that were removed before the animation should be added\r\n                const beforeRemoveClasses = this._beforeRemoveClasses;\r\n                if (beforeRemoveClasses) {\r\n                    for (const c of beforeRemoveClasses) {\r\n                        elementClassList.add(c);\r\n                    }\r\n                }\r\n                // inline styles that were added before the animation should be removed\r\n                const beforeStyles = this._beforeStyles;\r\n                if (beforeStyles) {\r\n                    for (const propName of Object.keys(beforeStyles)) {\r\n                        // ******** DOM WRITE ****************\r\n                        el.style.removeProperty(propName);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // finished in forward direction\r\n                // css classes to add after the animation\r\n                const afterAddClasses = this._afterAddClasses;\r\n                if (afterAddClasses) {\r\n                    for (const c of afterAddClasses) {\r\n                        // ******** DOM WRITE ****************\r\n                        elementClassList.add(c);\r\n                    }\r\n                }\r\n                // css classes to remove after the animation\r\n                const afterRemoveClasses = this._afterRemoveClasses;\r\n                if (afterRemoveClasses) {\r\n                    for (const c of afterRemoveClasses) {\r\n                        // ******** DOM WRITE ****************\r\n                        elementClassList.remove(c);\r\n                    }\r\n                }\r\n                // inline styles to add after the animation\r\n                const afterStyles = this._afterStyles;\r\n                if (afterStyles) {\r\n                    for (const [key, value] of Object.entries(afterStyles)) {\r\n                        el.style.setProperty(key, value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * NO RECURSION\r\n     */\r\n    _willChange(addWillChange) {\r\n        let wc;\r\n        const effects = this._fxProperties;\r\n        let willChange;\r\n        if (addWillChange && effects) {\r\n            wc = [];\r\n            for (const effect of effects) {\r\n                const propWC = effect.wc;\r\n                if (propWC === 'webkitTransform') {\r\n                    wc.push('transform', '-webkit-transform');\r\n                }\r\n                else if (propWC !== undefined) {\r\n                    wc.push(propWC);\r\n                }\r\n            }\r\n            willChange = wc.join(',');\r\n        }\r\n        else {\r\n            willChange = '';\r\n        }\r\n        const elements = this._elements;\r\n        if (elements) {\r\n            for (const el of elements) {\r\n                // ******** DOM WRITE ****************\r\n                el.style.setProperty('will-change', willChange);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Start the animation with a user controlled progress.\r\n     */\r\n    progressStart() {\r\n        // ensure all past transition end events have been cleared\r\n        this._clearAsync();\r\n        // ******** DOM READ/WRITE ****************\r\n        this._beforeAnimation();\r\n        // ******** DOM WRITE ****************\r\n        this._progressStart();\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _progressStart() {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._progressStart();\r\n            }\r\n        }\r\n        // force no duration, linear easing\r\n        // ******** DOM WRITE ****************\r\n        this._setTrans(0, true);\r\n        // ******** DOM WRITE ****************\r\n        this._willChange(true);\r\n    }\r\n    /**\r\n     * Set the progress step for this animation.\r\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\r\n     */\r\n    progressStep(stepValue) {\r\n        // only update if the last update was more than 16ms ago\r\n        stepValue = Math.min(1, Math.max(0, stepValue));\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child.progressStep(stepValue);\r\n            }\r\n        }\r\n        // ******** DOM WRITE ****************\r\n        this._progress(stepValue);\r\n    }\r\n    /**\r\n     * End the progress animation.\r\n     */\r\n    progressEnd(shouldComplete, currentStepValue, dur = -1) {\r\n        if (this._isReverse) {\r\n            // if the animation is going in reverse then\r\n            // flip the step value: 0 becomes 1, 1 becomes 0\r\n            currentStepValue = 1 - currentStepValue;\r\n        }\r\n        const stepValue = shouldComplete ? 1 : 0;\r\n        const diff = Math.abs(currentStepValue - stepValue);\r\n        if (dur < 0) {\r\n            dur = this._duration || 0;\r\n        }\r\n        else if (diff < 0.05) {\r\n            dur = 0;\r\n        }\r\n        this._isAsync = (dur > 30);\r\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\r\n        if (this._isAsync) {\r\n            // for the root animation only\r\n            // set the async TRANSITION END event\r\n            // and run onFinishes when the transition ends\r\n            // ******** DOM WRITE ****************\r\n            this._asyncEnd(dur, shouldComplete);\r\n            // this animation has a duration so we need another RAF\r\n            // for the CSS TRANSITION properties to kick in\r\n            if (!this._destroyed) {\r\n                raf(() => {\r\n                    this._playToStep(stepValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * DOM WRITE\r\n     * RECURSION\r\n     */\r\n    _progressEnd(shouldComplete, stepValue, dur, isAsync) {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                // ******** DOM WRITE ****************\r\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\r\n            }\r\n        }\r\n        if (!isAsync) {\r\n            // stop immediately\r\n            // set all the animations to their final position\r\n            // ******** DOM WRITE ****************\r\n            this._progress(stepValue);\r\n            this._willChange(false);\r\n            this._setAfterStyles();\r\n            this._didFinish(shouldComplete);\r\n        }\r\n        else {\r\n            // animate it back to it's ending position\r\n            this.isPlaying = true;\r\n            this.hasCompleted = false;\r\n            this._hasDur = true;\r\n            // ******** DOM WRITE ****************\r\n            this._willChange(true);\r\n            this._setTrans(dur, false);\r\n        }\r\n    }\r\n    /**\r\n     * Add a callback to fire when the animation has finished.\r\n     */\r\n    onFinish(callback, opts) {\r\n        if (opts && opts.clearExistingCallbacks) {\r\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\r\n        }\r\n        if (opts && opts.oneTimeCallback) {\r\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\r\n            this._onFinishOneTimeCallbacks.push(callback);\r\n        }\r\n        else {\r\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\r\n            this._onFinishCallbacks.push(callback);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * NO DOM\r\n     * RECURSION\r\n     */\r\n    _didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\r\n            }\r\n        }\r\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\r\n            this._didFinish(hasCompleted);\r\n        }\r\n    }\r\n    /**\r\n     * NO RECURSION\r\n     */\r\n    _didFinish(hasCompleted) {\r\n        this.isPlaying = false;\r\n        this.hasCompleted = hasCompleted;\r\n        if (this._onFinishCallbacks) {\r\n            // run all finish callbacks\r\n            for (const callback of this._onFinishCallbacks) {\r\n                callback(this);\r\n            }\r\n        }\r\n        if (this._onFinishOneTimeCallbacks) {\r\n            // run all \"onetime\" finish callbacks\r\n            for (const callback of this._onFinishOneTimeCallbacks) {\r\n                callback(this);\r\n            }\r\n            this._onFinishOneTimeCallbacks.length = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Reverse the animation.\r\n     */\r\n    reverse(shouldReverse = true) {\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                child.reverse(shouldReverse);\r\n            }\r\n        }\r\n        this._isReverse = !!shouldReverse;\r\n        return this;\r\n    }\r\n    /**\r\n     * Recursively destroy this animation and all child animations.\r\n     */\r\n    destroy() {\r\n        this._didFinish(false);\r\n        this._destroyed = true;\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                child.destroy();\r\n            }\r\n        }\r\n        this._clearAsync();\r\n        if (this._elements) {\r\n            this._elements.length = 0;\r\n        }\r\n        if (this._readCallbacks) {\r\n            this._readCallbacks.length = 0;\r\n        }\r\n        if (this._writeCallbacks) {\r\n            this._writeCallbacks.length = 0;\r\n        }\r\n        this.parent = undefined;\r\n        if (this._childAnimations) {\r\n            this._childAnimations.length = 0;\r\n        }\r\n        if (this._onFinishCallbacks) {\r\n            this._onFinishCallbacks.length = 0;\r\n        }\r\n        if (this._onFinishOneTimeCallbacks) {\r\n            this._onFinishOneTimeCallbacks.length = 0;\r\n        }\r\n    }\r\n    /**\r\n     * NO DOM\r\n     */\r\n    _transEl() {\r\n        // get the lowest level element that has an Animator\r\n        const children = this._childAnimations;\r\n        if (children) {\r\n            for (const child of children) {\r\n                const targetEl = child._transEl();\r\n                if (targetEl) {\r\n                    return targetEl;\r\n                }\r\n            }\r\n        }\r\n        return (this._hasTweenEffect &&\r\n            this._hasDur &&\r\n            this._elements !== undefined &&\r\n            this._elements.length > 0 ?\r\n            this._elements[0] : null);\r\n    }\r\n}\n\nconst create = (animationBuilder, baseEl, opts) => {\r\n    if (animationBuilder) {\r\n        return animationBuilder(Animator, baseEl, opts);\r\n    }\r\n    return Promise.resolve(new Animator());\r\n};\n\nexport { create };\n"]}